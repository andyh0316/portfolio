"use client";

import { ReduxProvider } from "@/store/providers/redux-provider";
import CssBaseline from "@mui/material/CssBaseline";
import { createTheme, ThemeProvider } from "@mui/material/styles";
// import { Jura, Montserrat } from "next/font/google";
import { AppStateInitializer } from "./AppStateInitializer";
import "./globals.css";
import { useState } from "react";
import { Box, Button } from "@mui/material";
import { darkTheme } from "./themes/darkTheme";
import { lightTheme } from "./themes/lightTheme";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// const jura = Jura({
//   subsets: ["latin"],
//   weight: ["300", "400", "500", "600", "700"],
//   variable: "--font-jura",
// });

// const montserrat = Montserrat({
//   subsets: ["latin"],
//   weight: ["100", "200", "300", "400", "500", "600", "700"],
//   variable: "--font-montserrat",
// });

const globalFontFamily = 'Verdana, "Helvetica Neue", Arial, sans-serif';

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(true);

  const theme = isDarkTheme ? darkTheme : lightTheme;

  return (
    <html lang="en">
      <head>
        {/* <link
          href="https://fonts.googleapis.com/css?family=Jura:300,400,500,600,700&display=swap"
          rel="stylesheet"
        ></link> */}
      </head>

      <body
        style={{
          fontFamily: globalFontFamily,
          margin: 0,
          padding: 0,
          boxSizing: "border-box",
        }}
      >
        <ThemeProvider theme={theme}>
          <CssBaseline />

          <ReduxProvider>
            <AppStateInitializer />

            <Box>This should be light</Box>
            
            <Button variant="contained" onClick={() => setIsDarkTheme(!isDarkTheme)}>
              Theme
            </Button>

            {children}
          </ReduxProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
